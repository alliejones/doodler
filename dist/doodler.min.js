function Recording(){this.array=[]}function Canvas(t){this.el=document.createElement("canvas"),this.ctr=document.getElementById(t.id),this.ctx=this.el.getContext("2d"),this.ctr.appendChild(this.el),this.prevMouseCoords={x:null,y:null},this.mouseCoords={x:null,y:null},this.curMouseCoords={x:null,y:null},this.newHistory(),this.recordingLoop=null,this.recordingInterval=10,this.el.width=t.width,this.el.height=t.height,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.strokeStyle="black",this.cmds=[],this.colors={},this.widths={},t.readOnly||(this.ctr.addEventListener("mousedown",this._onMousedown.bind(this)),window.addEventListener("selectstart",function(){return!1}),window.addEventListener("mousemove",this._onMousemove.bind(this)),window.addEventListener("mouseup",this._onMouseup.bind(this)))}Recording.prototype.fromString=function(t){for(var o=t.split(","),i=0,s=o.length;s>i;i++)this.append(o[i])},Recording.prototype.append=function(t){this.array.push(t)},Recording.prototype.toString=function(){return this.array.join(";")},Recording.prototype.forEachTimeout=function(t,o){0!==this.array.length&&this._eachElTimeout(0,t,o)},Recording.prototype._eachElTimeout=function(t,o,i){o(this.array[t]),this.array.length>t+1&&window.setTimeout(function(){this._eachElTimeout(t+1,o,i)}.bind(this),i)},Canvas.prototype._mapCoords=function(t,o){var i=this.el.getBoundingClientRect();return{x:t-i.left*(this.el.width/i.width),y:o-i.top*(this.el.height/i.height)}},Canvas.prototype._onMousedown=function(t){this._startDrawing(t)},Canvas.prototype._onMouseup=function(){this._stopDrawing()},Canvas.prototype._onMousemove=function(t){var o=this._windowScrollPosition();this.curMouseCoords=this._mapCoords(t.pageX-o.left,t.pageY-o.top)},Canvas.prototype._windowScrollPosition=function(){var t=document.documentElement,o=document.body,i=t&&t.scrollLeft||o&&o.scrollLeft||0,s=t&&t.scrollTop||o&&o.scrollTop||0;return{left:i,top:s}},Canvas.prototype.replay=function(){this.recording.forEachTimeout(function(t){if(t=(""+t).split(","),4===t.length)this._line.apply(this,t);else{var o=this.cmds[t[0]],i="_"+o.shift();console.log(i,o),this[i].apply(this,o)}}.bind(this),this.recordingInterval)},Canvas.prototype._startDrawing=function(t){var o=this._mapCoords(t.pageX,t.pageY);this.recordingLoop=window.setInterval(this._draw.bind(this),this.recordingInterval),this.ctx.moveTo(o.x,o.y),this.ctx.beginPath()},Canvas.prototype._stopDrawing=function(){this.ctx.beginPath(),this.prevMouseCoords={x:null,y:null},this.mouseCoords={x:null,y:null},window.clearInterval(this.recordingLoop),this.recordingLoop=null},Canvas.prototype.setStrokeColor=function(t){this.recording.append(this.colors[t]),this._setStrokeColor(t)},Canvas.prototype._setStrokeColor=function(t){this.ctx.strokeStyle=t},Canvas.prototype.registerStrokeColor=function(t){this.colors.hasOwnProperty(t)||(this.cmds.push(["setStrokeColor",t]),this.colors[t]=this.cmds.length-1)},Canvas.prototype.setStrokeWidth=function(t){this.recording.append(this.widths[t]),this._setStrokeWidth(t)},Canvas.prototype._setStrokeWidth=function(t){this.ctx.lineWidth=t},Canvas.prototype.registerStrokeWidth=function(t){this.widths.hasOwnProperty(t)||(this.cmds.push(["setStrokeWidth",t]),this.widths[t]=this.cmds.length-1)},Canvas.prototype._draw=function(){var t=this.prevMouseCoords.x=this.mouseCoords.x,o=this.prevMouseCoords.y=this.mouseCoords.y,i=this.mouseCoords.x=this.curMouseCoords.x,s=this.mouseCoords.y=this.curMouseCoords.y;(null===t||null===o)&&(t=i,o=s),this.line(t,o,i,s)},Canvas.prototype.line=function(t,o,i,s){this.recording.append([Math.floor(t),Math.floor(o),Math.floor(i),Math.floor(s)].join(",")),this._line(t,o,i,s)},Canvas.prototype._line=function(t,o,i,s){this.ctx.beginPath(),this.ctx.moveTo(t,o),this.ctx.lineTo(i,s),this.ctx.stroke()},Canvas.prototype.translate=function(t,o){this.ctx.save(),this.ctx.translate(t,o)},Canvas.prototype.undoTranslate=function(){this.ctx.restore()},Canvas.prototype.newHistory=function(){this.recording=new Recording},Canvas.prototype.erase=function(){this.ctx.clearRect(0,0,this.el.width,this.el.height)},Canvas.prototype.fromString=function(t){this.recording.fromString(t)};